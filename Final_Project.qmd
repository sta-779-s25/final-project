---
title: "Title"
author: "Authors"
format:
  pdf:
    fontsize: 12pt
editor: visual
execute: 
  echo: false
  message: false
  warning: false
abstract:
  This is an abstract
---

```{r}
#Libraries

library(causaldata)
library(dagitty)
library(ggdag)
library(tidyverse)
library(knitr)
library(naniar)
library(gtsummary)
library(gt)
library(broom)
library(readxl)
library(propensity)
library(halfmoon)
library(patchwork)

data("castle")
```


```{r}
castle_for_tab <- castle |> 
  select(!(starts_with("r20") |
             starts_with("trend") |
             starts_with("lead") |
             starts_with("lag"))) 

miss_tab <- miss_var_summary(castle_for_tab)
colnames(miss_tab) <- c("Variable", "Missing (n)", "Percent Missing")
miss_tab %>%
  gt()
```

```{r, echo = FALSE, warning = FALSE}
# Data transforms
castle$treat_year <- ifelse(castle$post == 1, castle$year, 0)

lower <- 1
upper <- 11
i <- 1
while(i < 51){
  treat_year_1 <- min(castle$treat_year[lower:upper][castle$treat_year[lower:upper] != 0])
  castle$treat_year[lower:upper] <- rep(treat_year_1, 11)
  lower <- upper + 1
  upper <- lower + 10
  i <- i + 1
}

castle <- castle %>%
  mutate(years_after_treat = year - treat_year)

castle$years_after_treat <- ifelse(castle$years_after_treat == -Inf, NA, castle$years_after_treat)


castle <- castle %>%
  group_by(sid) %>%
  mutate_at(c("assault", "burglary", "larceny", "motor", "l_larceny", "l_motor", 
              "l_police", "l_income", "l_exp_subsidy", "l_exp_pubwelfare"), lag) %>%
  mutate(murder_lag = lag(murder)) %>% 
  ungroup()


castle$sid <- ifelse(as.numeric(castle$sid) > 8, castle$sid - 1, castle$sid)

state_id_ranks <- read_excel("state_id_ranks.xlsx", col_names = FALSE)
colnames(state_id_ranks) <- c("state", "pop", "sid")
state_id_ranks <- state_id_ranks %>%
  select(state, sid)
castle_dat <- full_join(castle, state_id_ranks, by = "sid")

castle_dat <- castle_dat[castle_dat$year != 2000,]


castle_dat <- castle_dat |> 
  select(!(starts_with("r20") |
             starts_with("trend") |
             starts_with("lead") |
             starts_with("lag"))) %>%
  drop_na(robbery_gun_r)

```

#DAG

```{r}
# young_male_race is taking place of blackm_15_24 + whitem_15_24 + blackm_25_44 + whitem_25_44

castle_dag <- dagify(
  murder ~ young_male_race + poverty + popwt + robbery_gun_r + l_police + post + years_after_treat + robbery,
  
  post ~ homicide + robbery_gun_r + assault + burglary + motor + murder_lag + robbery,
  
  burglary ~ poverty + young_male_race,
  homicide ~ poverty + young_male_race,
  motor ~ poverty + young_male_race,
  robbery ~ poverty + young_male_race,
  assault ~ poverty + young_male_race,
  
  poverty ~ unemployrt + l_exp_subsidy + l_exp_pubwelfare + l_income,
  
  l_police ~ l_income,
  
  outcome = "murder",
  exposure = "post",
  labels = c(
    murder = "Murder",
    murder_lag = "Murder Lagged",
    unemployrt = "Unemployment",
    young_male_race = "Male Demo.",
    poverty = "Poverty",
    popwt = "Population",
    robbery_gun_r = "Armed Robbery Prop.",
    l_exp_subsidy = "Subsidy",
    l_exp_pubwelfare = "Welfare",
    l_police = "Police",
    post = "Castle Doctrine",
    years_after_treat = "Years Post Castle",
    
    homicide = "Homicides",
    robbery = "Robbery",
    assault = "Assaults",
    burglary = "Burglary",
    motor = "Auto Theft",
    l_income = "Income")
)


```

```{r, fig.height=10, fig.width=10}
ggdag(castle_dag, layout = "nicely", use_labels = "label", text = FALSE) +
  theme_dag()

```

```{r, fig.height=10, fig.width=10}
ggdag_adjustment_set(castle_dag, text_col = "black") +
  theme_dag()
adjustmentSets(castle_dag)

# use adjustment sets to build propensity score model

# check imbalance for variables not in DAG, adjust

# use weighting from propensity score in outcome model
    # add exposure + time to exposure + interaction
    # use g-comp technique

# use bootstrap to estimate standard error

# test effect for different years before/after - diff in diff
```

```{r}
castle_select <- castle_dat %>%
  select(c(post, assault, burglary, homicide, motor, robbery, robbery_gun_r)) |> 
  mutate(post = ifelse(post == 0, "Pre-Doctrine", "Post-Doctrine"))

tbl_summary(
  castle_select,
  by = post
) %>%
  add_overall(last = TRUE)

```

```{r}
propensity_model <- glm(post ~ splines::ns(homicide, 5) + splines::ns(burglary, 6) + assault + motor + robbery + robbery_gun_r , data = castle_dat, family = "binomial")

castle_dat <- propensity_model |>
  augment(type.predict = "response", data = castle_dat) %>%
  mutate(w_att = wt_att(.fitted, post, exposure_type = "binary"))

```

```{r}
p1 <- ggplot(castle_dat, aes(x = .fitted, group = post, fill = post)) +
  geom_mirror_histogram(bins = 30, alpha = .6, aes(fill = factor(post))) +
  theme(legend.position = "bottom") +
  labs(x = "Propensity Score", fill = "Passed Castle Doctrine") +
  ggtitle("Unweighted") +
  scale_y_continuous(labels = abs) +
  scale_fill_manual(labels = c("No", "Yes"), values = c("cyan1", "indianred")) +
  theme_minimal()

p2 <- ggplot(castle_dat, aes(x = .fitted, group = post, fill = post)) +
  geom_mirror_histogram(bins = 30, alpha = .6, aes(fill = factor(post), weight = w_att)) +
  theme(legend.position = "bottom") +
  labs(x = "Propensity Score", fill = "Passed Castle Doctrine") +
  ggtitle("ATT") +
  scale_y_continuous(labels = abs) +
  scale_fill_manual(labels = c("No", "Yes"), values = c("cyan1", "indianred")) +
  theme_minimal()

p1 + p2 + plot_layout(guides = "collect") & theme(legend.position = "bottom")

```


```{r}
weighted_for_love <- tidy_smd(
  castle_dat,
  .vars = c(assault, burglary, homicide, motor, robbery, robbery_gun_r),
  .group = post,
  .wts = c(w_att)
)

ggplot(data = weighted_for_love, aes(x = abs(smd), y = variable, group = method, color = method)) +
  geom_love() +
  theme_minimal()
```


```{r}
ggplot(castle_dat, aes(x = burglary, color = factor(post))) + 
  geom_ecdf(aes(weights = w_att)) +
  theme(legend.position = "bottom") +
  labs(x = "Burglary", color = "Castle Implemented") +
  ggtitle("ATT") +
  theme_minimal()
```



```{r ref.label = knitr::all_labels()}
#| echo: true
#| eval: false
```
